BASE <http://crossforest.eu/ifn/data/>
PREFIX ifn: <http://crossforest.eu/ifn/ontology/>
PREFIX spo: <http://crossforest.eu/position/ontology/>
PREFIX smo: <http://crossforest.eu/measures/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> 

PREFIX stratum: <http://crossforest.eu/ifn/data/stratum/>
PREFIX province:   <http://crossforest.eu/ifn/data/province/>
PREFIX infoSpecies: <http://crossforest.eu/ifn/data/infoSpecies/>
PREFIX basalArea: <http://crossforest.eu/ifn/data/basalArea/>
PREFIX volumeWithBark: <http://crossforest.eu/ifn/data/volumeWithBark/>
PREFIX volumeWithoutBark: <http://crossforest.eu/ifn/data/volumeWithoutBark/>
PREFIX numberOfTrees: <http://crossforest.eu/ifn/data/numberOfTrees/>
PREFIX unit: <http://crossforest.eu/measures/data/unit/>

GENERATE {

	<province/{?Origen}> a ifn:Province ;
		ifn:containsSpecies <infoSpecies/{?idProvinceSpecies}> ;
	.

	<stratum/{?Origen}-{?Estrato}>
		ifn:isInProvince <province/{?Origen}> ;
		ifn:hasForestAreaInHC ?surface ;
	.

	GENERATE {
		<stratum/{?Origen}-{?Estrato}>
			ifn:hasBasalAreaInM2 ?{ sum(?basalArea)*avg(?surface) } ;
			ifn:hasVolumeWithoutBarkInM3 ?{ sum(?volumeWithoutBark)*avg(?surface) } ;
			ifn:hasVolumeWithBarkInM3 ?{ sum(?volumeWithBark)*avg(?surface) } ;
			ifn:hasNumberOfTreesInUnits ?{ sum(?numerOfTrees)*avg(?surface) } ;
			ifn:hasForestAreaInHC ?{avg(?surface)} ;
			ifn:hasBasalArea <basalArea/{?Origen}-{?Estrato}-0> ;
			ifn:hasVolumeWithBark <volumeWithBark/{?Origen}-{?Estrato}-0> ;
			ifn:hasVolumeWithoutBark <volumeWithoutBark/{?Origen}-{?Estrato}-0> ;
			ifn:hasNumberOfTrees <numberOfTrees/{?Origen}-{?Estrato}-0> ;
			ifn:hasForestArea <forestArea/{?Origen}-{?Estrato}-0> ;
			ifn:isInProvince <province/{?Origen}> ;
		.

		<basalArea/{?Origen}-{?Estrato}-0> a ifn:BasalArea ;
			smo:hasValue ?{ sum(?basalArea)*avg(?surface) } ;
			smo:hasUnit unit:M2 ;
		.

		<volumeWithoutBark/{?Origen}-{?Estrato}-0> a ifn:VolumeWithoutBark ;
			smo:hasValue ?{ sum(?volumeWithoutBark)*avg(?surface) } ;
			smo:hasUnit unit:M3 ;
		.

		<volumeWithBark/{?Origen}-{?Estrato}-0> a ifn:VolumeWithBark ;
			smo:hasValue ?{ sum(?volumeWithBark)*avg(?surface) } ;
			smo:hasUnit unit:M3 ;
		.

		<numberOfTrees/{?Origen}-{?Estrato}-0> a ifn:NumberOfTrees ;
			smo:hasValue ?{ sum(?numerOfTrees)*avg(?surface) } ;
			smo:hasUnit unit:Units ;
		.

		<forestArea/{?Origen}-{?Estrato}-0> a ifn:NumberOfTrees ;
			smo:hasValue ?{avg(?surface)} ;
			smo:hasUnit unit:Units ;
		.
	}
	GROUP BY ?Origen ?Estrato
	.
}
FROM <http://crossforest.eu/ifn/estratos>
SOURCE <urn:source> AS ?source_exs
ITERATOR <http://w3id.org/sparql-generate/iter/CSV>(?source_exs, true, "\"", ",", "\n",
	"Origen","Estrato","Especie","CD","NPies","ABas","VCC","VSC","IAVC","VLE"
	)
	AS ?Origen ?Estrato ?Especie ?CD ?NPies ?ABas ?VCC ?VSC ?IAVC ?VLE
WHERE {
	BIND("{?Origen}-{?Estrato}-{?Especie}" AS ?idProvinciaEstratoEspecie)
	BIND("{?Origen}-{?Estrato}" AS ?idProvinciaEstrato)
	BIND(iri("stratum/{?idProvinciaEstrato}") AS ?iriProvinciaEstrato)
	BIND("{?Origen}-{?Especie}" AS ?idProvinceSpecies)
	BIND(xsd:decimal(?NPies) AS ?numerOfTrees)
	BIND(xsd:decimal(?ABas) AS ?basalArea)
	BIND(xsd:decimal(?VSC) AS ?volumeWithoutBark)
	BIND(xsd:decimal(?VCC) AS ?volumeWithBark)
	BIND(replace(?Especie, "0*([1-9][0-9]*)", "$1") AS ?species)
	?iriProvinciaEstrato ifn:hasForestAreaInHC ?surface.
}