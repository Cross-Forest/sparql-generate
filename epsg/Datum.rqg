BASE <http://epsg.w3id.org/data/>
PREFIX epsg: <http://epsg.w3id.org/ontology/>
PREFIX iter: <http://w3id.org/sparql-generate/iter/>
PREFIX fun: <http://w3id.org/sparql-generate/fn/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> 
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX dc: <http://purl.org/dc/elements/1.1/> 
PREFIX vann: <http://purl.org/vocab/vann/>

PREFIX crs: <http://epsg.w3id.org/data/crs/>
PREFIX area: <http://epsg.w3id.org/data/area/>
PREFIX cs: <http://epsg.w3id.org/data/cs/>
PREFIX datum: <http://epsg.w3id.org/data/datum/>
PREFIX operation: <http://epsg.w3id.org/data/operation/>


GENERATE {
	<crs/{?DATUM_CODE}> a ?type ;
		epsg:hasEPSGcode ?epsgCode ;
		epsg:name ?DATUM_NAME ;
		epsg:hasOriginDescription ?originDescription ;
		epsg:hasRealizationEpoch ?realizationEpoch ;
		epsg:hasEllipsoid <ellipsoid/{?ELLIPSOID_CODE}> ;
		epsg:hasPrimeMeridian <meridian/{?PRIME_MERIDIAN_CODE}> ;
		epsg:hasAreaOfUse <area/{?AREA_OF_USE_CODE}> ;
		epsg:scope ?scope ;
		epsg:remarks ?remarks ;
		epsg:informationSource ?INFORMATION_SOURCE ;
		epsg:dataSource ?DATA_SOURCE ;
#		epsg:revisionDate ?RevisionDate ;
		epsg:changeID ?CHANGE_ID ;
		epsg:deprecated ?isDeprecated ;
	.
}
SOURCE <urn:source> AS ?source
ITERATOR iter:CSV(?source, true, "\"", ",", "\n",
	"DATUM_CODE","DATUM_NAME","DATUM_TYPE","ORIGIN_DESCRIPTION","REALIZATION_EPOCH","ELLIPSOID_CODE","PRIME_MERIDIAN_CODE","AREA_OF_USE_CODE","DATUM_SCOPE","REMARKS","INFORMATION_SOURCE","DATA_SOURCE","REVISION_DATE","CHANGE_ID","DEPRECATED")
	AS ?DATUM_CODE ?DATUM_NAME ?DATUM_TYPE ?ORIGIN_DESCRIPTION ?REALIZATION_EPOCH ?ELLIPSOID_CODE ?PRIME_MERIDIAN_CODE ?AREA_OF_USE_CODE ?DATUM_SCOPE ?REMARKS ?INFORMATION_SOURCE ?DATA_SOURCE ?REVISION_DATE ?CHANGE_ID ?DEPRECATED
WHERE {
	?type rdfs:subClassOf epsg:Datum .
	?type epsg:isEPSGtype ?DATUM_TYPE .
	BIND("{?DATUM_CODE}"^^xsd:nonNegativeInteger AS ?epsgCode)
	BIND("{?ORIGIN_DESCRIPTION}"@en AS ?originDescription)
	BIND("{?REALIZATION_EPOCH}"^^xsd:date AS ?realizationEpoch)
	BIND("{?DATUM_SCOPE}"@en AS ?scope)
	BIND("{?REMARKS}"@en AS ?remarks)
	BIND("{?DEPRECATED}"^^xsd:boolean AS ?isDeprecated)
#	BIND(fun:regex(?REVISION_DATE, "([0-9]{4}-[0-9]{2}-[0-9]{2})(.*)",1) AS ?RevisionDate)
}