BASE <http://epsg.w3id.org/data/>
PREFIX epsg: <http://epsg.w3id.org/ontology/>
PREFIX folder: <file:///home/>
PREFIX iter: <http://w3id.org/sparql-generate/iter/>
PREFIX fun: <http://w3id.org/sparql-generate/fn/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> 
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX dc: <http://purl.org/dc/elements/1.1/> 
PREFIX vann: <http://purl.org/vocab/vann/>

GENERATE {
	<change/{?CHANGE_ID_TEXT}> a epsg:Change ;
		# epsg:hasEPSGcode ?epsgCode ;	###IDs don't have an EPSG code, but a Change ID
		# epsg:hasReportDate ?reportDate ;
		# epsg:hasCloseDate ?closeDate ;
		epsg:hasReporter ?REPORTER ;
		epsg:hasRequest ?requestDescription ;
		epsg:tablesAffected ?TABLES_AFFECTED ;
		epsg:codesAffected ?CODES_AFFECTED ;
		epsg:coment ?COMMENT ;
		epsg:action ?ACTION
		.
	}
ITERATOR iter:CSV(folder:Change.csv, true, "\"", ",", "\n",
	"CHANGE_ID_TEXT", "REPORT_DATE", "DATE_CLOSED", "REPORTER" , "REQUEST", "TABLES_AFFECTED", "CODES_AFFECTED", "COMMENT", "ACTION")
	AS ?CHANGE_ID_TEXT ?REPORT_DATE ?DATE_CLOSED ?REPORTER ?REQUEST ?TABLES_AFFECTED ?CODES_AFFECTED ?COMMENT ?ACTION
WHERE {
	# BIND("{?CHANGE_ID}"^^xsd:nonNegativeInteger AS ?epsgCode)
	BIND("{?DEPRECATED}"^^xsd:boolean AS ?isDeprecated)
	BIND("{?REQUEST}"@en AS ?requestDescription)
	# BIND(fun:regex(?REPORT_DATE, "([0-9]{4}-[0-9]{2}-[0-9]{2})(.*)",1) AS ?reportDate)
	# BIND(fun:regex(?DATE_CLOSED, "([0-9]{4}-[0-9]{2}-[0-9]{2})(.*)",1) AS ?closeDate)
}